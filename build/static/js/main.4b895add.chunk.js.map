{"version":3,"sources":["components/login/loginForm.component.js","components/login/loginIndex.component.js","socketAPI.js","components/chatLobby/chatInput.component.js","components/chatLobby/messageCard.component.js","components/chatLobby/chatroom/listItem.component.js","components/chatLobby/chatroom/userList.component.js","services/chatBot.js","components/chatLobby/chatRoom.component.js","components/chatLobby/home/listItem.component.js","components/chatLobby/home/roomList.component.js","components/chatLobby/home/actionPanel.component.js","components/chatLobby/mainRoom.component.js","components/chatLobby/chatLobby.component.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","useState","username","setUsername","className","onSubmit","event","preventDefault","handleUsername","type","placeholder","style","fontSize","borderColor","id","autoComplete","value","onChange","target","error","message","color","LoginIndex","paddingRight","loginHanddle","socket","io","subscribeToRoom","room","cb","on","handleCommand","action","split","substring","includes","command","length","trim","replace","emit","ChatInput","userInput","setuserInput","handleMessage","MessageCard","messageData","author","time","content","ListItem","user","UserList","list","map","key","botInfo","botJoinRoom","name","botCommandError","ChatRoom","messages","setMessages","userList","setUserList","messagesEndRef","useRef","useEffect","current","scrollIntoView","newMessageFN","userListFN","data","subscribeToUserList","removeListener","height","onClick","margin","i","ref","charAt","sendMessage","RoomList","ActionPanel","createInput","setCreateInput","modifyInput","setModifyInput","marginRight","botWelcome","roomList","setRoomList","roomListFN","paddingTop","ChatLobby","rooms","setRooms","currentTab","setCurrentTab","roomData","leaveRoomListner","roomName","filter","forceRenderTabPanel","selectedIndex","onSelect","index","App","setUser","setError","userInfoFN","userData","userLogin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4b895add.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction LoginForm(props) {\n\n  const [username, setUsername] = useState('');\n\n  const handleChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.handleUsername(username);\n    setUsername('');\n  }\n\n  return (\n    <div className=\"login-form pt-3\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Enter your username\" className=\"form-control\" style={{ fontSize: '20px', borderColor: '#7289da' }} id=\"usernameInput\" autoComplete=\"off\" value={username} onChange={handleChange} />\n          {props.error.error && <small className=\"form-text text-danger\">{props.error.message}</small>}\n          <button type=\"submit\" className=\"btn btn-outline-primary mt-3\" style={{ borderColor: '#7289da', color: '#7289da' }}>Login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from './loginForm.component';\n\nfunction LoginIndex(props) {\n\n    const handleUsername = (username) => {\n        props.loginHanddle(username)\n    }\n\n    return (\n        <div>\n            <div className=\"container vh-100\">\n                <div className=\"row h-100 justify-content-center align-items-center\">\n                    <div className=\"col-6 login-card\">\n                        <div className=\"mb-5\">\n                            <h1 className=\"text-center\" style={{color:'#7289da'}}>Welcome to <b>my_irc</b></h1>\n                            <p className=\"text-right text-muted\" style={{paddingRight:'80px'}}><small>By NGUYEN Hao-Nhien.</small></p>\n                        </div>\n                        <LoginForm handleUsername={handleUsername} error={props.error} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginIndex;","import io from 'socket.io-client';\nconst ENDPOINT = \"http://127.0.0.1:4242\";\nconst socket = io(ENDPOINT);\n\nexport function userLogin(username) {\n    socket.emit('login', username)\n}\n\nexport function subscribeToRoom(room, cb) {\n    socket.on('message', message => {\n        if (message.room === room || message.room === \"_global\") {\n            cb(message);\n        }\n    });\n}\n\nexport function subscribeToUserList(room, cb) {\n    socket.on('userListUpdate', data => {\n        if (data.room === room){\n            cb(data);\n        }\n    });\n}\n\nexport function subscribeToRoomList(cb) {\n    socket.on('roomListUpdate', list => {\n        cb(list);\n    });\n}\n\nexport function sendMessage(content, room) {\n    socket.emit('clientMessage', { room, content, type: 'user' });\n}\n\nexport function userInfoListner(cb) {\n    socket.on('userInfo', user => {\n        cb(user);\n    });\n}\n\nexport function joinRoomListner(cb) {\n    socket.on('joinRoom', roomData => {\n        cb(roomData);\n    })\n}\n\nexport function leaveRoomListner(cb) {\n    socket.on('leaveRoom', room => {\n        cb(room);\n    });\n}\n\nexport function handleCommand(message, room) {\n    let action = message.split(\" \")[0].substring(1);\n    if (['join', 'nick', 'create', 'delete', 'list', 'part', 'users', 'msg'].includes(action)) {\n        let command = message.substring(action.length + 1).trim().replace(/\\s\\s+/g, ' ');;\n        socket.emit(action, {command, room});\n        return true;\n    } else {\n        return action;\n    }\n}\n\nexport default socket;","import React, { useState } from 'react';\n\nfunction ChatInput(props) {\n\n    const [userInput, setuserInput] = useState('');\n\n    function handleChange(event) {\n        setuserInput(event.target.value)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.handleMessage(userInput);\n        setuserInput('');\n    }\n\n    return (\n        <div className=\"message-form\">\n            <form className=\"\" onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"chat-input pl-3\" style={{fontSize:'18px'}} autoComplete=\"off\" placeholder=\"Enter message\" value={userInput} onChange={handleChange} />\n                <button type=\"submit\" className=\"btn btn-primary chat-btn\">Send</button>\n            </form>\n        </div>\n    );\n}\n\nexport default ChatInput;","import React from 'react';\n\nfunction MessageCard(props) {\n    const { author, time, content, type } = props.messageData;\n\n    return (\n        <div className=\"message-card\">\n            <h5>{author && <span className={`username ${type === \"bot\" ? \"text-danger\" : \"text-user\"}`}>{author}</span>}<span className=\"time\">{time}</span></h5>\n            <p className={author || \"info\"}>{content}</p>\n        </div>\n    )\n}\n\nexport default MessageCard;","import React from 'react';\n\nfunction ListItem(props) {\n    const { user } = props;\n\n    return (\n        <div className=\"list-item ml-4 mr-3 my-3 d-flex\">\n            <span>{user}</span>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './listItem.component';\n\nfunction UserList(props) {\n    const { list } = props;\n\n    return (\n        <div className=\"user-list\">\n            <h3 className=\"list-title pl-2\">Users ({list.length})</h3>\n            <div className=\"list\">\n                {list.map(user => <ListItem user={user} key={user}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default UserList;","import React from 'react';\n\nconst botInfo = { author: 'chatBOT', type: 'bot' };\n\nexport function botWelcome(username) {\n    const content = (<span>Welcome to my_irc <strong>{username}</strong> !\n        <br /> <br /> <b>Here is a list of commands you can type : </b>\n        <br /><b>/nick</b> [nickname] : change your nickname.\n        <br /><b>/list</b> [string] : list all channels containing [string] if specified\n        <br /><b>/create</b> [channel] : create a channel.\n        <br /><b>/delete</b> [channel] : delete a channel.\n        <br /><b>/join</b> [channel] : join a [channel].\n        <br /><b>/part</b> [channel] : quit a [channel]\n        <br /><b>/users</b> : list all users in the channel.\n        <br /><b>/msg</b> [nickname;] [message] : send a [message] to a specified [nickname].\n    </span>\n    )\n    return [{ ...botInfo, content }, { ...botInfo, content: 'You will receive privates messages here.' }];\n}\n\nexport function botJoinRoom(room) {\n    const content = (\n        <span>You joined <i>#{room.name}</i></span>\n    )\n    return { content, time: room.time };\n}\n\nexport function botCommandError(action) {\n    return { ...botInfo, content: `'/${action}' command doesn't exist.` };\n}","import React, { useState, useEffect, useRef } from 'react';\nimport ChatInput from './chatInput.component';\nimport MessageCard from './messageCard.component';\nimport UserList from './chatroom/userList.component';\nimport { botJoinRoom, botCommandError } from '../../services/chatBot';\nimport socket, { subscribeToRoom, subscribeToUserList, handleCommand, sendMessage } from '../../socketAPI';\n\nfunction ChatRoom(props) {\n    const { room } = props;\n    const { username } = props.user;\n    const [messages, setMessages] = useState([botJoinRoom(room)]);\n    const [userList, setUserList] = useState([]);\n\n    function handleMessage(message) {\n        message = message.trim();\n        if (message.charAt(0) === \"/\") {\n            let action = handleCommand(message, room.name);\n            if (action !== true) {\n                setMessages([...messages, botCommandError(action)]);\n            }\n        }\n        else if (message !== \"\") {\n            sendMessage(message, room.name);\n        }\n    }\n\n    function leaveRoom() {\n        socket.emit('part', { room: room.name });\n    }\n\n    function deleteRoom() {\n        socket.emit('delete', { room: room.name });\n    }\n\n    //auto scroll down chat box\n    const messagesEndRef = useRef(null)\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView();\n    }, [messages]);\n\n\n    useEffect(() => {\n        function newMessageFN(messageData) {\n            setMessages(messages => [...messages, messageData]);\n        }\n        function userListFN(data) {\n            setUserList(data.list);\n        }\n        subscribeToRoom(room.name, newMessageFN);\n        subscribeToUserList(room.name, userListFN);\n\n        return function cleanup() {\n            socket.removeListener('message', newMessageFN);\n            socket.removeListener('userListUpdate', userListFN);\n        };\n    }, [room.name]);\n\n    return (\n        <div style={{ height: '44rem' }}>\n            <div className=\"container-fluid chat-room h-100 mt-2\">\n                <div className=\"row h-100\">\n                    <div className=\"col-3 pl-0 pr-1 h-100\">\n                        <div className=\"left-panel w-100 container-fluid\" style={{ height: '100%' }}>\n                            <h3 className=\"py-3 pl-2 mb-4 room-name\">#{room.name}</h3>\n                            <UserList list={userList} />\n                        </div>\n                        <div className=\"bottom-panel d-flex justify-content-between\">\n                            <h3 className=\"px-4 m-0 d-inline-block\">@{username}</h3>\n                            <div>\n                                <button onClick={deleteRoom} className=\"btn btn-danger disabled\" style={{ margin: '5px 15px 12px 0px' }}>Delete room</button>\n                                <button onClick={leaveRoom} className=\"btn btn-info\" style={{ margin: '5px 15px 12px 0px' }}>leave</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-9 h-100 pr-0\">\n                        <div style={{ height: '100%' }}>\n                            <div className=\"messages-box\">\n                                {messages.map((messageData, i) => <MessageCard messageData={messageData} key={i} />)}\n                                <div ref={messagesEndRef} />\n                            </div>\n                            <ChatInput handleMessage={handleMessage} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatRoom;","import React from 'react';\nimport socket from '../../../socketAPI';\n\nfunction ListItem(props) {\n    const { room } = props;\n\n    function joinRoom() {\n        socket.emit('join', {room: '_main', command: room.substring(1)});\n    }\n\n    return (\n        <div className=\"list-item ml-4 mr-3 my-3 d-flex justify-content-between\">\n            <span>{room}</span>\n            <button onClick={joinRoom} className=\"btn btn-outline-success\">Join</button>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './listItem.component';\n\nfunction RoomList(props) {\n    const { list } = props;\n\n    return (\n        <div className=\"col-6 h-100\">\n            <div className=\"room-list\">\n                <h3 className=\"pl-4 py-3 mb-0\">Room list</h3>\n                <div className=\"list\">\n                    {list.map(room => <ListItem room={room} key={room} /> )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RoomList;","import React, { useState } from 'react';\nimport socket from '../../../socketAPI';\n\nfunction ActionPanel(props) {\n    const [createInput, setCreateInput] = useState('');\n    const [modifyInput, setModifyInput] = useState(props.username);\n\n    function handleCreateChange(event) {\n        setCreateInput(event.target.value)\n    }\n\n    function handleModifyChange(event) {\n        setModifyInput(event.target.value)\n    }\n\n    function handleCreateRoom(event) {\n        event.preventDefault();\n        socket.emit('create', {command: createInput, room: props.room});\n        setCreateInput('');\n    }\n\n    function handleModifyUsername(event) {\n        event.preventDefault();\n        socket.emit('nick', {command: modifyInput, room: props.room});\n    }\n\n    return (\n        <div className=\"col-6 h-100\">\n            <div className=\"action-panel\">\n                <div className=\"form\">\n                    <h4 className=\"pl-2 py-1 mb-3\">Create a room</h4>\n                    <form className=\"d-flex pb-2\" onSubmit={handleCreateRoom}>\n                        <input type=\"text\" className=\"pl-3 form-control\" style={{ fontSize: '18px', marginRight: '10px' }} autoComplete=\"off\" placeholder=\"Enter a room name\" value={createInput} onChange={handleCreateChange} />\n                        <button type=\"submit\" className=\"btn btn-create\">Create</button>\n                    </form>\n                </div>\n                <div className=\"form mt-4\">\n                    <h4 className=\"pl-2 py-1 mb-3\">Change your username</h4>\n                    <form className=\"d-flex pb-2\" onSubmit={handleModifyUsername}>\n                        <input type=\"text\" className=\"pl-3 form-control\" style={{ fontSize: '18px', marginRight: '10px' }} autoComplete=\"off\" placeholder=\"Enter a new username\" value={modifyInput} onChange={handleModifyChange} />\n                        <button type=\"submit\" className=\"btn btn-create\">Change</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ActionPanel;","import React, { useState, useEffect, useRef } from 'react';\nimport ChatInput from './chatInput.component';\nimport MessageCard from './messageCard.component';\nimport RoomList from './home/roomList.component';\nimport ActionPanel from './home/actionPanel.component';\nimport { botWelcome, botCommandError } from '../../services/chatBot';\nimport socket, { subscribeToRoom, handleCommand, subscribeToRoomList } from '../../socketAPI';\n\nfunction ChatRoom(props) {\n    const { username } = props.user;\n    const [messages, setMessages] = useState([...botWelcome(username)]);\n    const [roomList, setRoomList] = useState([]);\n\n    function handleMessage(message) {\n        message = message.trim();\n        if (message.charAt(0) === \"/\") {\n            let action = handleCommand(message, '_main');\n            if (action !== true) {\n                setMessages([...messages, botCommandError(action)]);\n            }\n        }\n        else if (message !== \"\") {\n            setMessages([...messages, { author: 'chatBOT', content: `Only type commands here.`, type: 'bot' }])\n        }\n    }\n\n    //auto scroll down chat box\n    const messagesEndRef = useRef(null)\n    useEffect(() => {\n        messagesEndRef.current.scrollIntoView();\n    }, [messages]);\n\n\n    useEffect(() => {\n        function newMessageFN(messageData) {\n            setMessages(messages => [...messages, messageData]);\n        }\n        function roomListFN(list) {\n            setRoomList(list);\n        }\n        subscribeToRoom('_main', newMessageFN);\n        subscribeToRoomList(roomListFN);\n\n        return function cleanup() {\n            socket.removeListener('message', newMessageFN);\n            socket.removeListener('roomListUpdate', roomListFN);\n        };\n    }, []);\n\n    //userEffect to see connected user\n    // \n    // \n\n    return (\n        <div style={{ height: '44rem' }}>\n            <div className=\"container-fluid home-panel h-100 mt-2\">\n                <div className=\"row h-100\">\n                    <div className=\"col-6 pl-0 pr-1 h-100\">\n                        <div className=\"left-panel w-100 container-fluid\" style={{ height: '100%' }}>\n                            <h1 className=\"pl-3 py-3\">my_irc</h1>\n                            <div className=\"row\" style={{ height: '84%', paddingTop: '26px' }}>\n                                <RoomList list={roomList} />\n                                <ActionPanel room={'_main'} username={username} />\n                            </div>\n                        </div>\n                        <div className=\"bottom-panel\">\n                            <h3 className=\"px-4 d-inline-block\">@{username}</h3>\n                        </div>\n                    </div>\n                    <div className=\"col-6 h-100 pr-0\">\n                        <div style={{ height: '100%' }}>\n                            <div className=\"messages-box\">\n                                {messages.map((messageData, i) => <MessageCard messageData={messageData} key={i} />)}\n                                <div ref={messagesEndRef} />\n                            </div>\n                            <ChatInput handleMessage={handleMessage} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatRoom;","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport ChatRoom from './chatRoom.component';\nimport MainRoom from './mainRoom.component';\nimport { joinRoomListner, leaveRoomListner } from '../../socketAPI';\n\nfunction ChatLobby(props) {\n    const [rooms, setRooms] = useState([]);\n    const [currentTab, setCurrentTab] = useState(0);\n    const { user } = props;\n    \n    useEffect(() => {\n        function joinRoomFN(roomData) {\n            setRooms(rooms => [...rooms, roomData]);\n        }\n        function leaveRoomFN(roomName) {\n            setRooms(rooms => rooms.filter(room => room.name !== roomName))\n        }\n        joinRoomListner(joinRoomFN);\n        leaveRoomListner(leaveRoomFN);\n    },[]);\n\n    useEffect(() => {\n        setCurrentTab(rooms.length);\n    }, [rooms]);\n\n    return (\n        <div className=\"main-frame container-fluid\">\n            <div className=\"row mt-4\">\n                <div className=\"col-12\">\n                    <Tabs forceRenderTabPanel={true} selectedIndex={currentTab} onSelect={(index) => setCurrentTab(index)} >\n                        <TabList>\n                            <Tab>Home</Tab>\n                            {rooms.map((room) => (\n                                <Tab key={room.name}>#{room.name}</Tab>\n                            ))}\n                        </TabList>\n\n                        <TabPanel>\n                            <MainRoom user={user} />\n                        </TabPanel>\n                        {rooms.map((room) => (\n                            <TabPanel key={room.name}>\n                                <ChatRoom room={room} user={user} />\n                            </TabPanel>\n                        ))}\n\n                    </Tabs>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatLobby;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoginIndex from './components/login/loginIndex.component';\nimport socket, { userLogin, userInfoListner } from './socketAPI';\nimport ChatLobby from './components/chatLobby/chatLobby.component';\n\nfunction App() {\n  const [user, setUser] = useState(false);\n  const [error, setError] = useState(false);\n  //user = { username: 'golfy', id: socket.id } ;\n\n  //listen to username form server\n\n  useEffect(() => {\n    function userInfoFN(userData) {\n      if (userData.username) {\n        setUser(userData);\n        setError(false);\n      } else {\n        setError(userData);\n      }\n    }\n    userInfoListner(userInfoFN);\n\n    return function cleanup() {\n      socket.removeListener('userInfo', userInfoFN);\n    };\n  }, []);\n\n  const loginHanddle = (username) => {\n    // setUser(username);\n    userLogin(username);\n  }\n\n  return (\n    <div>\n      {user ? <ChatLobby user={user} /> : <LoginIndex loginHanddle={loginHanddle} error={error}/>}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}